[{
        "Name": "Total Accounts",
        "Description": "Gets the total number of accounts",
        "Widgets": ["Indicator", "Chart"],
        "data": {
            "metric": "accounts_total",
            "aggregator": "sum",
            "filters": "",
            "stacked": true,
            "offset": "",
            "sum_by": "",
            "legend": "",
            "type": 0,
            "query": "sum(resoto_accounts_total{$dashboard_filters})"
        }
    },
    {
        "Name": "Accounts per cloud",
        "Description": "Gets the total number of accounts per cloud",
        "Widgets": ["Chart"],
        "data": {
            "metric": "accounts_total",
            "aggregator": "",
            "filters": "",
            "stacked": true,
            "offset": "",
            "sum_by": "",
            "legend": "{cloud}",
            "type": 0,
            "query": "resoto_accounts_total{$dashboard_filters}"
        }
    },
    {
        "Name": "Instances per kind and cloud",
        "Description": "Gets the number of instances per resource kind and cloud name",
        "Widgets": ["Table", "Heatmap"],
        "data": {
            "type": 1,
            "search_query": "is(instance)",
            "grouping_variables": "kind, /ancestors.cloud.reported.name",
            "grouping_functions": "sum(1) as nodes",
            "query": "aggregate(kind, /ancestors.cloud.reported.name: sum(1) as nodes): is(instance)"
        }
    },
    {
        "Name": "Instances per type and account",
        "Widgets": ["Table", "Heatmap"],
        "Description": "Gets the number of instances per instance type and account name",
        "data": {
            "type": 1,
            "search_query": "is(instance)",
            "grouping_variables": "instance_type, /ancestors.account.reported.name",
            "grouping_functions": "sum(1) as instances",
            "query": "aggregate(instance_type, /ancestors.account.reported.name: sum(1) as instances): is(instance)"
        }
    },
    {
        "Name": "Instance number per account and instance type",
        "Widgets": ["Heatmap"],
        "Description": "Gets the number of instances per instance type and account name",
        "data": {
            "category_1": "/ancestors.account.reported.name",
            "category_1_alias": "account_name",
            "category_2": "instance_type",
            "category_2_alias": "type",
            "function": "sum(1)",
            "function_alias": "instances",
            "kind": "instance",
            "type": 3,
            "query": "aggregate(/ancestors.account.reported.name as account_name, instance_type as type: sum(1) as instances) : is(instance)"
        }
    },
    {
        "Name": "Instance number per region and cloud",
        "Widgets": ["WorldMap"],
        "Description": "Gets the number of instances per per region and cloud",
        "data": {
            "categories": [
                "/ancestors.cloud.reported.name as cloud",
                "/ancestors.region.reported.name as region"
            ],
            "function": "sum(1)",
            "function_alias": "instances",
            "search": "is(instance)",
            "grouping_variables": "",
            "grouping_functions": "",
            "search_query": "",
            "type": 4,
            "query": "aggregate(/ancestors.cloud.reported.name as cloud, /ancestors.region.reported.name as region: sum(1) as instances) : is(instance)",
            "custom_query": false
        }
    }
]
